name: 'Hello World'
on: 
  push:
    branches: [ "main" ]

  workflow_dispatch:
    inputs:
      RunDocker:
          description: Run Docker
          type: boolean
          required: false
          default: false

env:
  TAG: ${{ github.run_id }}
  MESSAGE: ${{ vars.message }}
  ACTION: ${{ github.event_name }}
  VERSION: ${{ vars.version }}

jobs:

  count_runs:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout Repository
        uses: actions/checkout@v2

      - name: Set up Python
        uses: actions/setup-python@v2
        with:
          python-version: 3.x

      - name: Get Workflow Runs
        id: get_runs
        run: |
          TOKEN="${{ secrets.PAT_TOKEN }}"
          WORKFLOW_NAME="Your Workflow Name"  # Replace with your actual workflow name
          DATE=$(date +"%Y-%m-%d")

          URL="https://api.github.com/repos/${{ github.repository }}/actions/workflows/${WORKFLOW_NAME}/runs?status=completed&event=workflow_run"

          RESPONSE=$(curl -s -H "Authorization: Bearer $TOKEN" "$URL")
          COUNT=$(echo "$RESPONSE" | jq ".workflow_runs | map(select(.created_at | startswith(\"$DATE\"))) | length")

          echo "::set-output name=count::$COUNT"
        env:
          GITHUB_TOKEN: ${{ secrets.PAT_TOKEN }}

      - name: Output Run Count
        run: echo "Workflow ran ${{ steps.get_runs.outputs.count }} times today."

  # docker-curl:
  #   runs-on: ubuntu-latest

  #   steps:
  #     - name: RUN DOCKER
  #       run: |
  #         docker run -dp 80:80 nginx:latest
  #         docker ps -a

  #     - name: CURL
  #       run: |
  #         curl http://localhost:80

  # create-file: 
  #   runs-on: ubuntu-latest
  #   # permissions:
  #   #   contents: write
    
  #   steps:
  #   - name: Check out code
  #     uses: actions/checkout@v3
    
  #   - name: Echo message
  #     run: |
  #       chmod +x ./SayHello.sh
  #       ./SayHello.sh "Hello World!"
            
  #   outputs:
  #     someMessage: "A Differant Message"

  # print-message: 
  #   runs-on: ubuntu-latest
  #   needs: [ create-file ]
  #   steps:
  #     - name: Set env
  #       run: echo ${{ needs.create-file.outputs.someMessage}}

  #   # - name: Configure Git
  #   #   run: |
  #   #     git config --global user.name "evanallen13"
  #   #     git config --global user.email "evanallen13@gmail"
        
  #   # - name: Make changes  
  #   #   run: |
  #   #     git pull origin main
  #   #     echo "Updated content" >> myfile.txt
  #   #     git add myfile.txt
  #   #     git commit -m "Auto commit: Updated myfile.txt"

  #   # - name: Push changes
  #   #   run: |
  #   #     git push origin main

  # build-docker:
  #   if: github.event_name == 'workflow_dispatch' && github.event.inputs.RunDocker == 'true'
  #   runs-on: ubuntu-latest
  #   steps:
      
  #     - name: Checkout
  #       uses: actions/checkout@v3
      
  #     - name: Login to Docker Hub
  #       uses: docker/login-action@v2
  #       with:
  #         username: ${{ secrets.DOCKERHUB_USERNAME }}
  #         password: ${{ secrets.DOCKERHUB_TOKEN }}
          
  #     - name: Set up Docker Build
  #       uses: docker/setup-buildx-action@v2

  #     - name: Build and push
  #       uses: docker/build-push-action@v4
  #       with:
  #         context: .
  #         file: ./Dockerfile
  #         push: true
  #         tags: ${{ secrets.DOCKERHUB_USERNAME }}/helloworld:${{ env.TAG }}

  # run-docker:
  #   runs-on: ubuntu-latest
  #   needs: [ build-docker, create-file, print-message]
  #   steps:

  #     - name: Login to Docker Hub
  #       uses: docker/login-action@v2
  #       with:
  #         username: ${{ secrets.DOCKERHUB_USERNAME }}
  #         password: ${{ secrets.DOCKERHUB_TOKEN }}

  #     - name: Run Docker
  #       run: docker run -e MY_VARIABLE="${{ env.MESSAGE }}" ${{ secrets.DOCKERHUB_USERNAME }}/helloworld:${{ env.TAG }}
