name: 'Hello World'
on: 
  push:
    branches: [ "main" ]

  workflow_dispatch:
    inputs:
      RunDocker:
          description: Run Docker
          type: boolean
          required: false
          default: false

env:
  TAG: ${{ vars.version }}
  MESSAGE: ${{ vars.message }}
  ACTION: ${{ github.event_name }}
  VERSION: ${{ vars.version }}
  DATE: $(date +'%Y-%m-%d')
  TAG_Test: "Test Tag"

jobs:

  # get-branch:
  #   runs-on: ubuntu-latest
  #   steps:
  #     - name: Checkout
  #       uses: actions/checkout@v2
      
  #     - name: Get Branch
  #       run: |
  #         echo "Branch: ${{ github.ref_name }}"
  #         echo "Job Name: ${{ github.event_name }}"
  #         echo "Run Attempt: ${{ github.run_attempt }}"
  #         echo "Run ID: ${{ github.run_id }}"
  #         echo "Date: ${{ env.DATE }}"
  #         echo "Tag: ${{ env.TAG }}"

  #     - name: echo test tag
  #       run: |
  #         echo "TAG_Test: ${{ env.TAG_Test }}"
      
  #     - name: "Increment Version"
  #       uses: action-pack/increment@v2
  #       with:
  #         name: 'VERSION'
  #         token: ${{ secrets.PAT_TOKEN }}
  #   outputs:
  #     uniqueVMActionsTag: ${{ steps.spin_up.outputs.TAG_Test }}


  set-tag:
    runs-on: ubuntu-latest
    steps:
      - name: Set Tag
        id: set_tag
        run: |
          echo "TAG=$(date --rfc-3339=date)_${{ github.run_number }}" >> $GITHUB_ENV

      - name: 
        run: |
          echo "TAG: ${{ steps.set_tag.outputs.TAG }}"

    outputs:
      tag: ${{ steps.set_tag.outputs.TAG }}

  echo-tag:
    runs-on: ubuntu-latest
    needs: set-tag
    steps:
      - name: Echo Tag
        run: |
          echo "Tag: ${{ needs.set-tag.outputs.tag }}"
          echo "Original Tag: ${{ env.TAG }}"
    
  # docker-curl:
  #   runs-on: ubuntu-latest

  #   steps:
  #     - name: RUN DOCKER
  #       run: |
  #         docker run -dp 80:80 nginx:latest
  #         docker ps -a

  #     - name: CURL
  #       run: |
  #         curl http://localhost:80

  # create-file: 
  #   runs-on: ubuntu-latest
  #   # permissions:
  #   #   contents: write
    
  #   steps:
  #   - name: Check out code
  #     uses: actions/checkout@v3
    
  #   - name: Echo message
  #     run: |
  #       chmod +x ./SayHello.sh
  #       ./SayHello.sh "Hello World!"
            
  #   outputs:
  #     someMessage: "A Differant Message"

  # print-message: 
  #   runs-on: ubuntu-latest
  #   needs: [ create-file ]
  #   steps:
  #     - name: Set env
  #       run: echo ${{ needs.create-file.outputs.someMessage}}

    # - name: Configure Git
    #   run: |
    #     git config --global user.name "evanallen13"
    #     git config --global user.email "evanallen13@gmail"
        
    # - name: Make changes  
    #   run: |
    #     git pull origin main
    #     echo "Updated content" >> myfile.txt
    #     git add myfile.txt
    #     git commit -m "Auto commit: Updated myfile.txt"

    # - name: Push changes
    #   run: |
    #     git push origin main

  build-docker:
    if: github.event_name == 'workflow_dispatch' && github.event.inputs.RunDocker == 'true'
    runs-on: ubuntu-latest
    steps:
      
      - name: Checkout
        uses: actions/checkout@v3
      
      - name: Login to Docker Hub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}
          
      - name: Set up Docker Build
        uses: docker/setup-buildx-action@v2

      - name: set release date
        run: |
          echo "TAG=$(date --rfc-3339=date)" >> ${GITHUB_ENV}

      - name: Build and push
        uses: docker/build-push-action@v4
        with:
          context: .
          file: ./Dockerfile
          push: true
          tags: ${{ secrets.DOCKERHUB_USERNAME }}/helloworld:${{ env.TAG }}_${{ env.VERSION}}

  run-docker:
    runs-on: ubuntu-latest
    needs: [ build-docker ]
    steps:

      - name: Login to Docker Hub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}
      
      - name: set release date
        run: |
          echo "TAG=$(date --rfc-3339=date)" >> ${GITHUB_ENV}

      - name: Run Docker
        run: docker run -e MY_VARIABLE="${{ env.MESSAGE }}" ${{ secrets.DOCKERHUB_USERNAME }}/helloworld:${{ env.TAG }}_${{ env.VERSION}}